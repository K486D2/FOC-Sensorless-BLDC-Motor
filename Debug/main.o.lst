   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm volt_phaseU,2,2
  18              	 .comm volt_phaseV,2,2
  19              	 .comm volt_phaseW,2,2
  20              	 .comm current_phaseU,2,2
  21              	 .comm current_phase_V,2,2
  22              	 .comm hallposition,4,4
  23              	 .global flag
  24              	 .section .bss.flag,"aw",%nobits
  25              	 .align 2
  28              	flag:
  29 0000 00000000 	 .space 4
  30              	 .global flag1
  31              	 .section .bss.flag1,"aw",%nobits
  32              	 .align 2
  35              	flag1:
  36 0000 00000000 	 .space 4
  37              	 .global flag2
  38              	 .section .bss.flag2,"aw",%nobits
  39              	 .align 2
  42              	flag2:
  43 0000 00000000 	 .space 4
  44              	 .global flag3
  45              	 .section .bss.flag3,"aw",%nobits
  46              	 .align 2
  49              	flag3:
  50 0000 00000000 	 .space 4
  51              	 .comm time1,4,4
  52              	 .comm time2,4,4
  53              	 .comm time_1phase_updown_zerocross,4,4
  54              	 .comm time_30degree,4,4
  55              	 .comm poles_pair,4,4
  56              	 .global Kp
  57              	 .section .data.Kp,"aw",%progbits
  58              	 .align 2
  61              	Kp:
  62 0000 6F12833B 	 .word 998445679
  63              	 .global Ki
  64              	 .section .data.Ki,"aw",%progbits
  65              	 .align 2
  68              	Ki:
  69 0000 7F6ABC3C 	 .word 1018980991
  70              	 .comm duty1,4,4
  71              	 .comm duty2,4,4
  72              	 .comm sum,4,4
  73              	 .comm volt_u,4,4
  74              	 .comm volt_v,4,4
  75              	 .comm volt_w,4,4
  76              	 .global SpeedMea1
  77              	 .section .bss.SpeedMea1,"aw",%nobits
  78              	 .align 2
  81              	SpeedMea1:
  82 0000 00000000 	 .space 4
  83              	 .comm time_30degree1,4,4
  84              	 .comm SpeedMea2,4,4
  85              	 .comm theta,4,4
  86              	 .global theta1
  87              	 .section .bss.theta1,"aw",%nobits
  88              	 .align 2
  91              	theta1:
  92 0000 00000000 	 .space 4
  93              	 .comm SpeedError,4,4
  94              	 .comm realtheta,4,4
  95              	 .global a
  96              	 .section .bss.a,"aw",%nobits
  97              	 .align 2
 100              	a:
 101 0000 00000000 	 .space 4
 102              	 .comm current_alpha,4,4
 103              	 .comm current_beta,4,4
 104              	 .comm current_u,4,4
 105              	 .comm current_v,4,4
 106              	 .comm current_sd,4,4
 107              	 .comm current_sq,4,4
 108              	 .comm sum_IsqRef,4,4
 109              	 .comm Kp_IsqRef,4,4
 110              	 .comm Ki_IsqRef,4,4
 111              	 .comm IsqRef,4,4
 112              	 .comm IsqRef1,4,4
 113              	 .comm sum_Usd,4,4
 114              	 .comm Kp_Usd,4,4
 115              	 .comm Ki_Usd,4,4
 116              	 .comm IsdError,4,4
 117              	 .comm Usd,4,4
 118              	 .comm Usd1,4,4
 119              	 .comm sum_Usq,4,4
 120              	 .comm Kp_Usq,4,4
 121              	 .comm Ki_Usq,4,4
 122              	 .comm IsqError,4,4
 123              	 .comm Usq,4,4
 124              	 .comm Usq1,4,4
 125              	 .comm Usalpha,4,4
 126              	 .comm Usbeta,4,4
 127              	 .comm SpeedMea,4,4
 128              	 .global SpeedRef
 129              	 .section .data.SpeedRef,"aw",%progbits
 130              	 .align 2
 133              	SpeedRef:
 134 0000 F4010000 	 .word 500
 135              	 .comm sector,4,4
 136              	 .comm ct,4,4
 137              	 .comm Error,4,4
 138              	 .global duty
 139              	 .section .data.duty,"aw",%progbits
 140              	 .align 2
 143              	duty:
 144 0000 88130000 	 .word 5000
 145              	 .comm dutytest,4,4
 146              	 .global timetick_count
 147              	 .section .bss.timetick_count,"aw",%nobits
 148              	 .align 2
 151              	timetick_count:
 152 0000 00000000 	 .space 4
 153              	 .global timetick_count1
 154              	 .section .bss.timetick_count1,"aw",%nobits
 155              	 .align 2
 158              	timetick_count1:
 159 0000 00000000 	 .space 4
 160              	 .global timetick_count2
 161              	 .section .bss.timetick_count2,"aw",%nobits
 162              	 .align 2
 165              	timetick_count2:
 166 0000 00000000 	 .space 4
 167              	 .global timetick_count3
 168              	 .section .bss.timetick_count3,"aw",%nobits
 169              	 .align 2
 172              	timetick_count3:
 173 0000 00000000 	 .space 4
 174              	 .global time
 175              	 .section .bss.time,"aw",%nobits
 176              	 .align 2
 179              	time:
 180 0000 00000000 	 .space 4
 181              	 .comm TimerId,4,4
 182              	 .section .text.main,"ax",%progbits
 183              	 .align 2
 184              	 .global main
 185              	 .code 16
 186              	 .thumb_func
 188              	main:
 189              	.LFB313:
 190              	 .file 1 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2023 Aug 28 13:45:36
   5:../main.c     ****  *  Author: dell
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include "DAVE.h"     //Declarations from DAVE Code Generation (includes SFR declaration)
  12:../main.c     **** #include "math.h"
  13:../main.c     **** /**
  14:../main.c     **** 
  15:../main.c     ****  * @brief main() - Application entry point
  16:../main.c     ****  *
  17:../main.c     ****  * <b>Details of function</b><br>
  18:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  19:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  20:../main.c     ****  * code.
  21:../main.c     ****  */
  22:../main.c     **** XMC_VADC_RESULT_SIZE_t volt_phaseU,volt_phaseV,volt_phaseW,current_phaseU,current_phase_V;
  23:../main.c     **** uint32_t hallposition, flag=0,flag1=0,flag2=0,flag3=0,time1,time2,time_1phase_updown_zerocross,time
  24:../main.c     **** float Kp=0.004, Ki=0.023, duty1,duty2,sum,volt_u,volt_v,volt_w,SpeedMea1=0,time_30degree1,SpeedMea2
  25:../main.c     **** float a=0,current_alpha,current_beta,current_u,current_v,current_sd,current_sq;
  26:../main.c     **** float sum_IsqRef, Kp_IsqRef, Ki_IsqRef, IsqRef, IsqRef1;
  27:../main.c     **** float sum_Usd, Kp_Usd, Ki_Usd, IsdError, Usd, Usd1;
  28:../main.c     **** float sum_Usq, Kp_Usq, Ki_Usq, IsqError, Usq, Usq1;
  29:../main.c     **** float Usalpha, Usbeta;
  30:../main.c     **** uint32_t SpeedMea,SpeedRef=500,sector,ct;
  31:../main.c     **** int32_t Error;
  32:../main.c     **** int32_t duty=5000,dutytest;
  33:../main.c     **** uint32_t timetick_count=0,timetick_count1=0, timetick_count2=0,timetick_count3=0, time=0, TimerId;
  34:../main.c     **** #define time_delay 10U
  35:../main.c     **** #define sqrt_2 1.41421
  36:../main.c     **** #define sqrt_3 1.73205
  37:../main.c     **** #define one_on_sqrt_2 0.7071
  38:../main.c     **** #define one_on_sqrt_3 0.57735
  39:../main.c     **** #define PI 3.141592
  40:../main.c     **** 
  41:../main.c     **** int main(void)
  42:../main.c     **** {
 191              	 .loc 1 42 0
 192              	 .cfi_startproc
 193 0000 90B5     	 push {r4,r7,lr}
 194              	.LCFI0:
 195              	 .cfi_def_cfa_offset 12
 196              	 .cfi_offset 4,-12
 197              	 .cfi_offset 7,-8
 198              	 .cfi_offset 14,-4
 199 0002 83B0     	 sub sp,sp,#12
 200              	.LCFI1:
 201              	 .cfi_def_cfa_offset 24
 202 0004 00AF     	 add r7,sp,#0
 203              	.LCFI2:
 204              	 .cfi_def_cfa_register 7
  43:../main.c     ****   DAVE_STATUS_t status;
  44:../main.c     **** 
  45:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 205              	 .loc 1 45 0
 206 0006 FC1D     	 add r4,r7,#7
 207 0008 FFF7FEFF 	 bl DAVE_Init
 208 000c 031C     	 mov r3,r0
 209 000e 2370     	 strb r3,[r4]
  46:../main.c     **** 
  47:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 210              	 .loc 1 47 0
 211 0010 FB1D     	 add r3,r7,#7
 212 0012 1B78     	 ldrb r3,[r3]
 213 0014 002B     	 cmp r3,#0
 214 0016 00D0     	 beq .L2
 215              	.L3:
  48:../main.c     ****   {
  49:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  50:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  51:../main.c     **** 
  52:../main.c     ****     while(1U)
  53:../main.c     ****     {
  54:../main.c     **** 
  55:../main.c     ****     }
 216              	 .loc 1 55 0 discriminator 1
 217 0018 FEE7     	 b .L3
 218              	.L2:
  56:../main.c     ****   }
  57:../main.c     **** 	/*HALL_POSIF_Start(&HALL_POSIF_0);*/
  58:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  59:../main.c     ****   while(1U)
  60:../main.c     ****   {
  61:../main.c     **** 	  /*Alignment*/
  62:../main.c     **** 
  63:../main.c     ****   }
 219              	 .loc 1 63 0 discriminator 2
 220 001a FEE7     	 b .L2
 221              	 .cfi_endproc
 222              	.LFE313:
 224              	 .global __aeabi_fcmpgt
 225              	 .global __aeabi_fcmplt
 226              	 .section .text.IRQ21_Handler,"ax",%progbits
 227              	 .align 2
 228              	 .global IRQ21_Handler
 229              	 .code 16
 230              	 .thumb_func
 232              	IRQ21_Handler:
 233              	.LFB314:
  64:../main.c     **** }
  65:../main.c     **** void NgatHandler(){
 234              	 .loc 1 65 0
 235              	 .cfi_startproc
 236 0000 80B5     	 push {r7,lr}
 237              	.LCFI3:
 238              	 .cfi_def_cfa_offset 8
 239              	 .cfi_offset 7,-8
 240              	 .cfi_offset 14,-4
 241 0002 00AF     	 add r7,sp,#0
 242              	.LCFI4:
 243              	 .cfi_def_cfa_register 7
  66:../main.c     **** 	timetick_count++;
 244              	 .loc 1 66 0
 245 0004 E14B     	 ldr r3,.L67
 246 0006 1B68     	 ldr r3,[r3]
 247 0008 5A1C     	 add r2,r3,#1
 248 000a E04B     	 ldr r3,.L67
 249 000c 1A60     	 str r2,[r3]
  67:../main.c     **** 	timetick_count1++;
 250              	 .loc 1 67 0
 251 000e E04B     	 ldr r3,.L67+4
 252 0010 1B68     	 ldr r3,[r3]
 253 0012 5A1C     	 add r2,r3,#1
 254 0014 DE4B     	 ldr r3,.L67+4
 255 0016 1A60     	 str r2,[r3]
  68:../main.c     **** 	timetick_count2++;
 256              	 .loc 1 68 0
 257 0018 DE4B     	 ldr r3,.L67+8
 258 001a 1B68     	 ldr r3,[r3]
 259 001c 5A1C     	 add r2,r3,#1
 260 001e DD4B     	 ldr r3,.L67+8
 261 0020 1A60     	 str r2,[r3]
  69:../main.c     **** 	timetick_count3++;
 262              	 .loc 1 69 0
 263 0022 DD4B     	 ldr r3,.L67+12
 264 0024 1B68     	 ldr r3,[r3]
 265 0026 5A1C     	 add r2,r3,#1
 266 0028 DB4B     	 ldr r3,.L67+12
 267 002a 1A60     	 str r2,[r3]
  70:../main.c     ****     if (timetick_count==0){
 268              	 .loc 1 70 0
 269 002c D74B     	 ldr r3,.L67
 270 002e 1B68     	 ldr r3,[r3]
 271 0030 002B     	 cmp r3,#0
 272 0032 17D1     	 bne .L5
  71:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 273              	 .loc 1 71 0
 274 0034 D94B     	 ldr r3,.L67+16
 275 0036 181C     	 mov r0,r3
 276 0038 FFF7FEFF 	 bl PWM_CCU4_Stop
  72:../main.c     **** 			   PWM_CCU4_Stop(&PWM_LU);
 277              	 .loc 1 72 0
 278 003c D84B     	 ldr r3,.L67+20
 279 003e 181C     	 mov r0,r3
 280 0040 FFF7FEFF 	 bl PWM_CCU4_Stop
  73:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 281              	 .loc 1 73 0
 282 0044 D74B     	 ldr r3,.L67+24
 283 0046 181C     	 mov r0,r3
 284 0048 FFF7FEFF 	 bl PWM_CCU8_Stop
  74:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HW);
 285              	 .loc 1 74 0
 286 004c D64B     	 ldr r3,.L67+28
 287 004e 181C     	 mov r0,r3
 288 0050 FFF7FEFF 	 bl PWM_CCU8_Stop
  75:../main.c     **** 			   PWM_CCU8_Start(&PWM_HV);
 289              	 .loc 1 75 0
 290 0054 D54B     	 ldr r3,.L67+32
 291 0056 181C     	 mov r0,r3
 292 0058 FFF7FEFF 	 bl PWM_CCU8_Start
  76:../main.c     **** 			   PWM_CCU8_Start(&PWM_LW);
 293              	 .loc 1 76 0
 294 005c D44B     	 ldr r3,.L67+36
 295 005e 181C     	 mov r0,r3
 296 0060 FFF7FEFF 	 bl PWM_CCU8_Start
 297              	.L5:
  77:../main.c     ****     }
  78:../main.c     **** 		   if (timetick_count==50000){
 298              	 .loc 1 78 0
 299 0064 C94B     	 ldr r3,.L67
 300 0066 1B68     	 ldr r3,[r3]
 301 0068 D24A     	 ldr r2,.L67+40
 302 006a 9342     	 cmp r3,r2
 303 006c 17D1     	 bne .L6
  79:../main.c     **** 			   PWM_CCU4_Stop(&PWM_LU);
 304              	 .loc 1 79 0
 305 006e CC4B     	 ldr r3,.L67+20
 306 0070 181C     	 mov r0,r3
 307 0072 FFF7FEFF 	 bl PWM_CCU4_Stop
  80:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HV);
 308              	 .loc 1 80 0
 309 0076 CD4B     	 ldr r3,.L67+32
 310 0078 181C     	 mov r0,r3
 311 007a FFF7FEFF 	 bl PWM_CCU8_Stop
  81:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 312              	 .loc 1 81 0
 313 007e C94B     	 ldr r3,.L67+24
 314 0080 181C     	 mov r0,r3
 315 0082 FFF7FEFF 	 bl PWM_CCU8_Stop
  82:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HW);
 316              	 .loc 1 82 0
 317 0086 C84B     	 ldr r3,.L67+28
 318 0088 181C     	 mov r0,r3
 319 008a FFF7FEFF 	 bl PWM_CCU8_Stop
  83:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 320              	 .loc 1 83 0
 321 008e C34B     	 ldr r3,.L67+16
 322 0090 181C     	 mov r0,r3
 323 0092 FFF7FEFF 	 bl PWM_CCU4_Stop
  84:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LW);
 324              	 .loc 1 84 0
 325 0096 C64B     	 ldr r3,.L67+36
 326 0098 181C     	 mov r0,r3
 327 009a FFF7FEFF 	 bl PWM_CCU8_Stop
 328              	.L6:
  85:../main.c     **** 		   }
  86:../main.c     **** 		  /*Back emf zero crossing detect, calculate time delay 30 degrees*/
  87:../main.c     **** 	       if ((volt_u>0.5) && (volt_u<12)){
 329              	 .loc 1 87 0
 330 009e C64B     	 ldr r3,.L67+44
 331 00a0 1B68     	 ldr r3,[r3]
 332 00a2 181C     	 add r0,r3,#0
 333 00a4 FC21     	 mov r1,#252
 334 00a6 8905     	 lsl r1,r1,#22
 335 00a8 FFF7FEFF 	 bl __aeabi_fcmpgt
 336 00ac 031E     	 sub r3,r0,#0
 337 00ae 29D0     	 beq .L7
 338              	 .loc 1 87 0 is_stmt 0 discriminator 1
 339 00b0 C14B     	 ldr r3,.L67+44
 340 00b2 1B68     	 ldr r3,[r3]
 341 00b4 181C     	 add r0,r3,#0
 342 00b6 C149     	 ldr r1,.L67+48
 343 00b8 FFF7FEFF 	 bl __aeabi_fcmplt
 344 00bc 031E     	 sub r3,r0,#0
 345 00be 21D0     	 beq .L7
  88:../main.c     **** 	    	   sector=4;
 346              	 .loc 1 88 0 is_stmt 1
 347 00c0 BF4B     	 ldr r3,.L67+52
 348 00c2 0422     	 mov r2,#4
 349 00c4 1A60     	 str r2,[r3]
  89:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 350              	 .loc 1 89 0
 351 00c6 B54B     	 ldr r3,.L67+16
 352 00c8 181C     	 mov r0,r3
 353 00ca FFF7FEFF 	 bl PWM_CCU4_Stop
  90:../main.c     **** 			   PWM_CCU4_Stop(&PWM_LU);
 354              	 .loc 1 90 0
 355 00ce B44B     	 ldr r3,.L67+20
 356 00d0 181C     	 mov r0,r3
 357 00d2 FFF7FEFF 	 bl PWM_CCU4_Stop
  91:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HV);
 358              	 .loc 1 91 0
 359 00d6 B54B     	 ldr r3,.L67+32
 360 00d8 181C     	 mov r0,r3
 361 00da FFF7FEFF 	 bl PWM_CCU8_Stop
  92:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LW);
 362              	 .loc 1 92 0
 363 00de B44B     	 ldr r3,.L67+36
 364 00e0 181C     	 mov r0,r3
 365 00e2 FFF7FEFF 	 bl PWM_CCU8_Stop
  93:../main.c     **** 			   PWM_CCU8_Start(&PWM_LV);
 366              	 .loc 1 93 0
 367 00e6 AF4B     	 ldr r3,.L67+24
 368 00e8 181C     	 mov r0,r3
 369 00ea FFF7FEFF 	 bl PWM_CCU8_Start
  94:../main.c     **** 			   PWM_CCU8_Start(&PWM_HW);
 370              	 .loc 1 94 0
 371 00ee AE4B     	 ldr r3,.L67+28
 372 00f0 181C     	 mov r0,r3
 373 00f2 FFF7FEFF 	 bl PWM_CCU8_Start
  95:../main.c     **** 			   time1=timetick_count2;
 374              	 .loc 1 95 0
 375 00f6 A74B     	 ldr r3,.L67+8
 376 00f8 1A68     	 ldr r2,[r3]
 377 00fa B24B     	 ldr r3,.L67+56
 378 00fc 1A60     	 str r2,[r3]
  96:../main.c     **** 			   flag1=1;
 379              	 .loc 1 96 0
 380 00fe B24B     	 ldr r3,.L67+60
 381 0100 0122     	 mov r2,#1
 382 0102 1A60     	 str r2,[r3]
 383              	.L7:
  97:../main.c     **** 	       }
  98:../main.c     **** 	       if ((volt_u>12) && (volt_u<23.5)){
 384              	 .loc 1 98 0
 385 0104 AC4B     	 ldr r3,.L67+44
 386 0106 1B68     	 ldr r3,[r3]
 387 0108 181C     	 add r0,r3,#0
 388 010a AC49     	 ldr r1,.L67+48
 389 010c FFF7FEFF 	 bl __aeabi_fcmpgt
 390 0110 031E     	 sub r3,r0,#0
 391 0112 29D0     	 beq .L10
 392              	 .loc 1 98 0 is_stmt 0 discriminator 1
 393 0114 A84B     	 ldr r3,.L67+44
 394 0116 1B68     	 ldr r3,[r3]
 395 0118 181C     	 add r0,r3,#0
 396 011a AC49     	 ldr r1,.L67+64
 397 011c FFF7FEFF 	 bl __aeabi_fcmplt
 398 0120 031E     	 sub r3,r0,#0
 399 0122 21D0     	 beq .L10
  99:../main.c     **** 	    	   sector=1;
 400              	 .loc 1 99 0 is_stmt 1
 401 0124 A64B     	 ldr r3,.L67+52
 402 0126 0122     	 mov r2,#1
 403 0128 1A60     	 str r2,[r3]
 100:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 404              	 .loc 1 100 0
 405 012a 9C4B     	 ldr r3,.L67+16
 406 012c 181C     	 mov r0,r3
 407 012e FFF7FEFF 	 bl PWM_CCU4_Stop
 101:../main.c     **** 			   PWM_CCU4_Stop(&PWM_LU);
 408              	 .loc 1 101 0
 409 0132 9B4B     	 ldr r3,.L67+20
 410 0134 181C     	 mov r0,r3
 411 0136 FFF7FEFF 	 bl PWM_CCU4_Stop
 102:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 412              	 .loc 1 102 0
 413 013a 9A4B     	 ldr r3,.L67+24
 414 013c 181C     	 mov r0,r3
 415 013e FFF7FEFF 	 bl PWM_CCU8_Stop
 103:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HW);
 416              	 .loc 1 103 0
 417 0142 994B     	 ldr r3,.L67+28
 418 0144 181C     	 mov r0,r3
 419 0146 FFF7FEFF 	 bl PWM_CCU8_Stop
 104:../main.c     **** 			   PWM_CCU8_Start(&PWM_HV);
 420              	 .loc 1 104 0
 421 014a 984B     	 ldr r3,.L67+32
 422 014c 181C     	 mov r0,r3
 423 014e FFF7FEFF 	 bl PWM_CCU8_Start
 105:../main.c     **** 			   PWM_CCU8_Start(&PWM_LW);
 424              	 .loc 1 105 0
 425 0152 974B     	 ldr r3,.L67+36
 426 0154 181C     	 mov r0,r3
 427 0156 FFF7FEFF 	 bl PWM_CCU8_Start
 106:../main.c     **** 			   time2=timetick_count2;
 428              	 .loc 1 106 0
 429 015a 8E4B     	 ldr r3,.L67+8
 430 015c 1A68     	 ldr r2,[r3]
 431 015e 9C4B     	 ldr r3,.L67+68
 432 0160 1A60     	 str r2,[r3]
 107:../main.c     **** 			   flag2=1;
 433              	 .loc 1 107 0
 434 0162 9C4B     	 ldr r3,.L67+72
 435 0164 0122     	 mov r2,#1
 436 0166 1A60     	 str r2,[r3]
 437              	.L10:
 108:../main.c     **** 	       }
 109:../main.c     **** 	       if ( (volt_v>0.5) && (volt_v<12)){
 438              	 .loc 1 109 0
 439 0168 9B4B     	 ldr r3,.L67+76
 440 016a 1B68     	 ldr r3,[r3]
 441 016c 181C     	 add r0,r3,#0
 442 016e FC21     	 mov r1,#252
 443 0170 8905     	 lsl r1,r1,#22
 444 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 445 0176 031E     	 sub r3,r0,#0
 446 0178 22D0     	 beq .L13
 447              	 .loc 1 109 0 is_stmt 0 discriminator 1
 448 017a 974B     	 ldr r3,.L67+76
 449 017c 1B68     	 ldr r3,[r3]
 450 017e 181C     	 add r0,r3,#0
 451 0180 8E49     	 ldr r1,.L67+48
 452 0182 FFF7FEFF 	 bl __aeabi_fcmplt
 453 0186 031E     	 sub r3,r0,#0
 454 0188 1AD0     	 beq .L13
 110:../main.c     **** 	    	   sector=6;
 455              	 .loc 1 110 0 is_stmt 1
 456 018a 8D4B     	 ldr r3,.L67+52
 457 018c 0622     	 mov r2,#6
 458 018e 1A60     	 str r2,[r3]
 111:../main.c     **** 			   PWM_CCU4_Stop(&PWM_LU);
 459              	 .loc 1 111 0
 460 0190 834B     	 ldr r3,.L67+20
 461 0192 181C     	 mov r0,r3
 462 0194 FFF7FEFF 	 bl PWM_CCU4_Stop
 112:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HV);
 463              	 .loc 1 112 0
 464 0198 844B     	 ldr r3,.L67+32
 465 019a 181C     	 mov r0,r3
 466 019c FFF7FEFF 	 bl PWM_CCU8_Stop
 113:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 467              	 .loc 1 113 0
 468 01a0 804B     	 ldr r3,.L67+24
 469 01a2 181C     	 mov r0,r3
 470 01a4 FFF7FEFF 	 bl PWM_CCU8_Stop
 114:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HW);
 471              	 .loc 1 114 0
 472 01a8 7F4B     	 ldr r3,.L67+28
 473 01aa 181C     	 mov r0,r3
 474 01ac FFF7FEFF 	 bl PWM_CCU8_Stop
 115:../main.c     **** 			   PWM_CCU4_Start(&PWM_HU);
 475              	 .loc 1 115 0
 476 01b0 7A4B     	 ldr r3,.L67+16
 477 01b2 181C     	 mov r0,r3
 478 01b4 FFF7FEFF 	 bl PWM_CCU4_Start
 116:../main.c     **** 			   PWM_CCU8_Start(&PWM_LW);
 479              	 .loc 1 116 0
 480 01b8 7D4B     	 ldr r3,.L67+36
 481 01ba 181C     	 mov r0,r3
 482 01bc FFF7FEFF 	 bl PWM_CCU8_Start
 483              	.L13:
 117:../main.c     **** 	       }
 118:../main.c     **** 	       if ( (volt_v>12) && (volt_v<23.5)){
 484              	 .loc 1 118 0
 485 01c0 854B     	 ldr r3,.L67+76
 486 01c2 1B68     	 ldr r3,[r3]
 487 01c4 181C     	 add r0,r3,#0
 488 01c6 7D49     	 ldr r1,.L67+48
 489 01c8 FFF7FEFF 	 bl __aeabi_fcmpgt
 490 01cc 031E     	 sub r3,r0,#0
 491 01ce 22D0     	 beq .L16
 492              	 .loc 1 118 0 is_stmt 0 discriminator 1
 493 01d0 814B     	 ldr r3,.L67+76
 494 01d2 1B68     	 ldr r3,[r3]
 495 01d4 181C     	 add r0,r3,#0
 496 01d6 7D49     	 ldr r1,.L67+64
 497 01d8 FFF7FEFF 	 bl __aeabi_fcmplt
 498 01dc 031E     	 sub r3,r0,#0
 499 01de 1AD0     	 beq .L16
 119:../main.c     **** 	    	   sector=3;
 500              	 .loc 1 119 0 is_stmt 1
 501 01e0 774B     	 ldr r3,.L67+52
 502 01e2 0322     	 mov r2,#3
 503 01e4 1A60     	 str r2,[r3]
 120:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 504              	 .loc 1 120 0
 505 01e6 6D4B     	 ldr r3,.L67+16
 506 01e8 181C     	 mov r0,r3
 507 01ea FFF7FEFF 	 bl PWM_CCU4_Stop
 121:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HV);
 508              	 .loc 1 121 0
 509 01ee 6F4B     	 ldr r3,.L67+32
 510 01f0 181C     	 mov r0,r3
 511 01f2 FFF7FEFF 	 bl PWM_CCU8_Stop
 122:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 512              	 .loc 1 122 0
 513 01f6 6B4B     	 ldr r3,.L67+24
 514 01f8 181C     	 mov r0,r3
 515 01fa FFF7FEFF 	 bl PWM_CCU8_Stop
 123:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LW);
 516              	 .loc 1 123 0
 517 01fe 6C4B     	 ldr r3,.L67+36
 518 0200 181C     	 mov r0,r3
 519 0202 FFF7FEFF 	 bl PWM_CCU8_Stop
 124:../main.c     **** 			   PWM_CCU4_Start(&PWM_LU);
 520              	 .loc 1 124 0
 521 0206 664B     	 ldr r3,.L67+20
 522 0208 181C     	 mov r0,r3
 523 020a FFF7FEFF 	 bl PWM_CCU4_Start
 125:../main.c     **** 			   PWM_CCU8_Start(&PWM_HW);
 524              	 .loc 1 125 0
 525 020e 664B     	 ldr r3,.L67+28
 526 0210 181C     	 mov r0,r3
 527 0212 FFF7FEFF 	 bl PWM_CCU8_Start
 528              	.L16:
 126:../main.c     **** 	       }
 127:../main.c     **** 	       if ((volt_w>0.5) && (volt_w<12)){
 529              	 .loc 1 127 0
 530 0216 714B     	 ldr r3,.L67+80
 531 0218 1B68     	 ldr r3,[r3]
 532 021a 181C     	 add r0,r3,#0
 533 021c FC21     	 mov r1,#252
 534 021e 8905     	 lsl r1,r1,#22
 535 0220 FFF7FEFF 	 bl __aeabi_fcmpgt
 536 0224 031E     	 sub r3,r0,#0
 537 0226 22D0     	 beq .L19
 538              	 .loc 1 127 0 is_stmt 0 discriminator 1
 539 0228 6C4B     	 ldr r3,.L67+80
 540 022a 1B68     	 ldr r3,[r3]
 541 022c 181C     	 add r0,r3,#0
 542 022e 6349     	 ldr r1,.L67+48
 543 0230 FFF7FEFF 	 bl __aeabi_fcmplt
 544 0234 031E     	 sub r3,r0,#0
 545 0236 1AD0     	 beq .L19
 128:../main.c     **** 	    	   sector=2;
 546              	 .loc 1 128 0 is_stmt 1
 547 0238 614B     	 ldr r3,.L67+52
 548 023a 0222     	 mov r2,#2
 549 023c 1A60     	 str r2,[r3]
 129:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 550              	 .loc 1 129 0
 551 023e 574B     	 ldr r3,.L67+16
 552 0240 181C     	 mov r0,r3
 553 0242 FFF7FEFF 	 bl PWM_CCU4_Stop
 130:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 554              	 .loc 1 130 0
 555 0246 574B     	 ldr r3,.L67+24
 556 0248 181C     	 mov r0,r3
 557 024a FFF7FEFF 	 bl PWM_CCU8_Stop
 131:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HW);
 558              	 .loc 1 131 0
 559 024e 564B     	 ldr r3,.L67+28
 560 0250 181C     	 mov r0,r3
 561 0252 FFF7FEFF 	 bl PWM_CCU8_Stop
 132:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LW);
 562              	 .loc 1 132 0
 563 0256 564B     	 ldr r3,.L67+36
 564 0258 181C     	 mov r0,r3
 565 025a FFF7FEFF 	 bl PWM_CCU8_Stop
 133:../main.c     **** 			   PWM_CCU4_Start(&PWM_LU);
 566              	 .loc 1 133 0
 567 025e 504B     	 ldr r3,.L67+20
 568 0260 181C     	 mov r0,r3
 569 0262 FFF7FEFF 	 bl PWM_CCU4_Start
 134:../main.c     **** 			   PWM_CCU8_Start(&PWM_HV);
 570              	 .loc 1 134 0
 571 0266 514B     	 ldr r3,.L67+32
 572 0268 181C     	 mov r0,r3
 573 026a FFF7FEFF 	 bl PWM_CCU8_Start
 574              	.L19:
 135:../main.c     **** 	       }
 136:../main.c     **** 	       if ((volt_w>12) && (volt_w<23.5)){
 575              	 .loc 1 136 0
 576 026e 5B4B     	 ldr r3,.L67+80
 577 0270 1B68     	 ldr r3,[r3]
 578 0272 181C     	 add r0,r3,#0
 579 0274 5149     	 ldr r1,.L67+48
 580 0276 FFF7FEFF 	 bl __aeabi_fcmpgt
 581 027a 031E     	 sub r3,r0,#0
 582 027c 22D0     	 beq .L22
 583              	 .loc 1 136 0 is_stmt 0 discriminator 1
 584 027e 574B     	 ldr r3,.L67+80
 585 0280 1B68     	 ldr r3,[r3]
 586 0282 181C     	 add r0,r3,#0
 587 0284 5149     	 ldr r1,.L67+64
 588 0286 FFF7FEFF 	 bl __aeabi_fcmplt
 589 028a 031E     	 sub r3,r0,#0
 590 028c 1AD0     	 beq .L22
 137:../main.c     **** 	    	   sector=5;
 591              	 .loc 1 137 0 is_stmt 1
 592 028e 4C4B     	 ldr r3,.L67+52
 593 0290 0522     	 mov r2,#5
 594 0292 1A60     	 str r2,[r3]
 138:../main.c     **** 			   PWM_CCU4_Stop(&PWM_HU);
 595              	 .loc 1 138 0
 596 0294 414B     	 ldr r3,.L67+16
 597 0296 181C     	 mov r0,r3
 598 0298 FFF7FEFF 	 bl PWM_CCU4_Stop
 139:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LV);
 599              	 .loc 1 139 0
 600 029c 414B     	 ldr r3,.L67+24
 601 029e 181C     	 mov r0,r3
 602 02a0 FFF7FEFF 	 bl PWM_CCU8_Stop
 140:../main.c     **** 			   PWM_CCU8_Stop(&PWM_HW);
 603              	 .loc 1 140 0
 604 02a4 404B     	 ldr r3,.L67+28
 605 02a6 181C     	 mov r0,r3
 606 02a8 FFF7FEFF 	 bl PWM_CCU8_Stop
 141:../main.c     **** 			   PWM_CCU8_Stop(&PWM_LW);
 607              	 .loc 1 141 0
 608 02ac 404B     	 ldr r3,.L67+36
 609 02ae 181C     	 mov r0,r3
 610 02b0 FFF7FEFF 	 bl PWM_CCU8_Stop
 142:../main.c     **** 			   PWM_CCU4_Start(&PWM_LU);
 611              	 .loc 1 142 0
 612 02b4 3A4B     	 ldr r3,.L67+20
 613 02b6 181C     	 mov r0,r3
 614 02b8 FFF7FEFF 	 bl PWM_CCU4_Start
 143:../main.c     **** 			   PWM_CCU8_Start(&PWM_HV);
 615              	 .loc 1 143 0
 616 02bc 3B4B     	 ldr r3,.L67+32
 617 02be 181C     	 mov r0,r3
 618 02c0 FFF7FEFF 	 bl PWM_CCU8_Start
 619              	.L22:
 144:../main.c     **** 	       }
 145:../main.c     **** 	           if ((volt_u>0.5) && (volt_u<12)){
 620              	 .loc 1 145 0
 621 02c4 3C4B     	 ldr r3,.L67+44
 622 02c6 1B68     	 ldr r3,[r3]
 623 02c8 181C     	 add r0,r3,#0
 624 02ca FC21     	 mov r1,#252
 625 02cc 8905     	 lsl r1,r1,#22
 626 02ce FFF7FEFF 	 bl __aeabi_fcmpgt
 627 02d2 031E     	 sub r3,r0,#0
 628 02d4 22D0     	 beq .L25
 629              	 .loc 1 145 0 is_stmt 0 discriminator 1
 630 02d6 384B     	 ldr r3,.L67+44
 631 02d8 1B68     	 ldr r3,[r3]
 632 02da 181C     	 add r0,r3,#0
 633 02dc 3749     	 ldr r1,.L67+48
 634 02de FFF7FEFF 	 bl __aeabi_fcmplt
 635 02e2 031E     	 sub r3,r0,#0
 636 02e4 1AD0     	 beq .L25
 146:../main.c     **** 	        	   sector=4;
 637              	 .loc 1 146 0 is_stmt 1
 638 02e6 364B     	 ldr r3,.L67+52
 639 02e8 0422     	 mov r2,#4
 640 02ea 1A60     	 str r2,[r3]
 147:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_HU);
 641              	 .loc 1 147 0
 642 02ec 2B4B     	 ldr r3,.L67+16
 643 02ee 181C     	 mov r0,r3
 644 02f0 FFF7FEFF 	 bl PWM_CCU4_Stop
 148:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_LU);
 645              	 .loc 1 148 0
 646 02f4 2A4B     	 ldr r3,.L67+20
 647 02f6 181C     	 mov r0,r3
 648 02f8 FFF7FEFF 	 bl PWM_CCU4_Stop
 149:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HV);
 649              	 .loc 1 149 0
 650 02fc 2B4B     	 ldr r3,.L67+32
 651 02fe 181C     	 mov r0,r3
 652 0300 FFF7FEFF 	 bl PWM_CCU8_Stop
 150:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LW);
 653              	 .loc 1 150 0
 654 0304 2A4B     	 ldr r3,.L67+36
 655 0306 181C     	 mov r0,r3
 656 0308 FFF7FEFF 	 bl PWM_CCU8_Stop
 151:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_LV);
 657              	 .loc 1 151 0
 658 030c 254B     	 ldr r3,.L67+24
 659 030e 181C     	 mov r0,r3
 660 0310 FFF7FEFF 	 bl PWM_CCU8_Start
 152:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_HW);
 661              	 .loc 1 152 0
 662 0314 244B     	 ldr r3,.L67+28
 663 0316 181C     	 mov r0,r3
 664 0318 FFF7FEFF 	 bl PWM_CCU8_Start
 665              	.L25:
 153:../main.c     **** 
 154:../main.c     **** 	           }
 155:../main.c     **** 	           if ((volt_u>12) && (volt_u<23.5)){
 666              	 .loc 1 155 0
 667 031c 264B     	 ldr r3,.L67+44
 668 031e 1B68     	 ldr r3,[r3]
 669 0320 181C     	 add r0,r3,#0
 670 0322 2649     	 ldr r1,.L67+48
 671 0324 FFF7FEFF 	 bl __aeabi_fcmpgt
 672 0328 031E     	 sub r3,r0,#0
 673 032a 22D0     	 beq .L28
 674              	 .loc 1 155 0 is_stmt 0 discriminator 1
 675 032c 224B     	 ldr r3,.L67+44
 676 032e 1B68     	 ldr r3,[r3]
 677 0330 181C     	 add r0,r3,#0
 678 0332 2649     	 ldr r1,.L67+64
 679 0334 FFF7FEFF 	 bl __aeabi_fcmplt
 680 0338 031E     	 sub r3,r0,#0
 681 033a 1AD0     	 beq .L28
 156:../main.c     **** 	        	   sector=1;
 682              	 .loc 1 156 0 is_stmt 1
 683 033c 204B     	 ldr r3,.L67+52
 684 033e 0122     	 mov r2,#1
 685 0340 1A60     	 str r2,[r3]
 157:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_HU);
 686              	 .loc 1 157 0
 687 0342 164B     	 ldr r3,.L67+16
 688 0344 181C     	 mov r0,r3
 689 0346 FFF7FEFF 	 bl PWM_CCU4_Stop
 158:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_LU);
 690              	 .loc 1 158 0
 691 034a 154B     	 ldr r3,.L67+20
 692 034c 181C     	 mov r0,r3
 693 034e FFF7FEFF 	 bl PWM_CCU4_Stop
 159:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LV);
 694              	 .loc 1 159 0
 695 0352 144B     	 ldr r3,.L67+24
 696 0354 181C     	 mov r0,r3
 697 0356 FFF7FEFF 	 bl PWM_CCU8_Stop
 160:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HW);
 698              	 .loc 1 160 0
 699 035a 134B     	 ldr r3,.L67+28
 700 035c 181C     	 mov r0,r3
 701 035e FFF7FEFF 	 bl PWM_CCU8_Stop
 161:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_HV);
 702              	 .loc 1 161 0
 703 0362 124B     	 ldr r3,.L67+32
 704 0364 181C     	 mov r0,r3
 705 0366 FFF7FEFF 	 bl PWM_CCU8_Start
 162:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_LW);
 706              	 .loc 1 162 0
 707 036a 114B     	 ldr r3,.L67+36
 708 036c 181C     	 mov r0,r3
 709 036e FFF7FEFF 	 bl PWM_CCU8_Start
 710              	.L28:
 163:../main.c     **** 
 164:../main.c     **** 	           }
 165:../main.c     **** 	           if ( (volt_v>0.5) && (volt_v<12)){
 711              	 .loc 1 165 0
 712 0372 194B     	 ldr r3,.L67+76
 713 0374 1B68     	 ldr r3,[r3]
 714 0376 181C     	 add r0,r3,#0
 715 0378 FC21     	 mov r1,#252
 716 037a 8905     	 lsl r1,r1,#22
 717 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 718 0380 031E     	 sub r3,r0,#0
 719 0382 4DD0     	 beq .L31
 720              	 .loc 1 165 0 is_stmt 0 discriminator 1
 721 0384 144B     	 ldr r3,.L67+76
 722 0386 1B68     	 ldr r3,[r3]
 723 0388 181C     	 add r0,r3,#0
 724 038a 29E0     	 b .L68
 725              	.L69:
 726              	 .align 2
 727              	.L67:
 728 038c 00000000 	 .word timetick_count
 729 0390 00000000 	 .word timetick_count1
 730 0394 00000000 	 .word timetick_count2
 731 0398 00000000 	 .word timetick_count3
 732 039c 00000000 	 .word PWM_HU
 733 03a0 00000000 	 .word PWM_LU
 734 03a4 00000000 	 .word PWM_LV
 735 03a8 00000000 	 .word PWM_HW
 736 03ac 00000000 	 .word PWM_HV
 737 03b0 00000000 	 .word PWM_LW
 738 03b4 50C30000 	 .word 50000
 739 03b8 00000000 	 .word volt_u
 740 03bc 00004041 	 .word 1094713344
 741 03c0 00000000 	 .word sector
 742 03c4 00000000 	 .word time1
 743 03c8 00000000 	 .word flag1
 744 03cc 0000BC41 	 .word 1102839808
 745 03d0 00000000 	 .word time2
 746 03d4 00000000 	 .word flag2
 747 03d8 00000000 	 .word volt_v
 748 03dc 00000000 	 .word volt_w
 749              	.L68:
 750 03e0 5149     	 ldr r1,.L70
 751 03e2 FFF7FEFF 	 bl __aeabi_fcmplt
 752 03e6 031E     	 sub r3,r0,#0
 753 03e8 1AD0     	 beq .L31
 166:../main.c     **** 	        	   sector=6;
 754              	 .loc 1 166 0 is_stmt 1
 755 03ea 504B     	 ldr r3,.L70+4
 756 03ec 0622     	 mov r2,#6
 757 03ee 1A60     	 str r2,[r3]
 167:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_LU);
 758              	 .loc 1 167 0
 759 03f0 4F4B     	 ldr r3,.L70+8
 760 03f2 181C     	 mov r0,r3
 761 03f4 FFF7FEFF 	 bl PWM_CCU4_Stop
 168:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HV);
 762              	 .loc 1 168 0
 763 03f8 4E4B     	 ldr r3,.L70+12
 764 03fa 181C     	 mov r0,r3
 765 03fc FFF7FEFF 	 bl PWM_CCU8_Stop
 169:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LV);
 766              	 .loc 1 169 0
 767 0400 4D4B     	 ldr r3,.L70+16
 768 0402 181C     	 mov r0,r3
 769 0404 FFF7FEFF 	 bl PWM_CCU8_Stop
 170:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HW);
 770              	 .loc 1 170 0
 771 0408 4C4B     	 ldr r3,.L70+20
 772 040a 181C     	 mov r0,r3
 773 040c FFF7FEFF 	 bl PWM_CCU8_Stop
 171:../main.c     **** 	    		   PWM_CCU4_Start(&PWM_HU);
 774              	 .loc 1 171 0
 775 0410 4B4B     	 ldr r3,.L70+24
 776 0412 181C     	 mov r0,r3
 777 0414 FFF7FEFF 	 bl PWM_CCU4_Start
 172:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_LW);
 778              	 .loc 1 172 0
 779 0418 4A4B     	 ldr r3,.L70+28
 780 041a 181C     	 mov r0,r3
 781 041c FFF7FEFF 	 bl PWM_CCU8_Start
 782              	.L31:
 173:../main.c     **** 
 174:../main.c     **** 	           }
 175:../main.c     **** 	           if ( (volt_v>12) && (volt_v<23.5)){
 783              	 .loc 1 175 0
 784 0420 494B     	 ldr r3,.L70+32
 785 0422 1B68     	 ldr r3,[r3]
 786 0424 181C     	 add r0,r3,#0
 787 0426 4049     	 ldr r1,.L70
 788 0428 FFF7FEFF 	 bl __aeabi_fcmpgt
 789 042c 031E     	 sub r3,r0,#0
 790 042e 22D0     	 beq .L34
 791              	 .loc 1 175 0 is_stmt 0 discriminator 1
 792 0430 454B     	 ldr r3,.L70+32
 793 0432 1B68     	 ldr r3,[r3]
 794 0434 181C     	 add r0,r3,#0
 795 0436 4549     	 ldr r1,.L70+36
 796 0438 FFF7FEFF 	 bl __aeabi_fcmplt
 797 043c 031E     	 sub r3,r0,#0
 798 043e 1AD0     	 beq .L34
 176:../main.c     **** 	        	   sector=3;
 799              	 .loc 1 176 0 is_stmt 1
 800 0440 3A4B     	 ldr r3,.L70+4
 801 0442 0322     	 mov r2,#3
 802 0444 1A60     	 str r2,[r3]
 177:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_HU);
 803              	 .loc 1 177 0
 804 0446 3E4B     	 ldr r3,.L70+24
 805 0448 181C     	 mov r0,r3
 806 044a FFF7FEFF 	 bl PWM_CCU4_Stop
 178:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HV);
 807              	 .loc 1 178 0
 808 044e 394B     	 ldr r3,.L70+12
 809 0450 181C     	 mov r0,r3
 810 0452 FFF7FEFF 	 bl PWM_CCU8_Stop
 179:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LV);
 811              	 .loc 1 179 0
 812 0456 384B     	 ldr r3,.L70+16
 813 0458 181C     	 mov r0,r3
 814 045a FFF7FEFF 	 bl PWM_CCU8_Stop
 180:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LW);
 815              	 .loc 1 180 0
 816 045e 394B     	 ldr r3,.L70+28
 817 0460 181C     	 mov r0,r3
 818 0462 FFF7FEFF 	 bl PWM_CCU8_Stop
 181:../main.c     **** 	    		   PWM_CCU4_Start(&PWM_LU);
 819              	 .loc 1 181 0
 820 0466 324B     	 ldr r3,.L70+8
 821 0468 181C     	 mov r0,r3
 822 046a FFF7FEFF 	 bl PWM_CCU4_Start
 182:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_HW);
 823              	 .loc 1 182 0
 824 046e 334B     	 ldr r3,.L70+20
 825 0470 181C     	 mov r0,r3
 826 0472 FFF7FEFF 	 bl PWM_CCU8_Start
 827              	.L34:
 183:../main.c     **** 
 184:../main.c     **** 	           }
 185:../main.c     **** 	           if ((volt_w>0.5) && (volt_w<12)){
 828              	 .loc 1 185 0
 829 0476 364B     	 ldr r3,.L70+40
 830 0478 1B68     	 ldr r3,[r3]
 831 047a 181C     	 add r0,r3,#0
 832 047c FC21     	 mov r1,#252
 833 047e 8905     	 lsl r1,r1,#22
 834 0480 FFF7FEFF 	 bl __aeabi_fcmpgt
 835 0484 031E     	 sub r3,r0,#0
 836 0486 22D0     	 beq .L37
 837              	 .loc 1 185 0 is_stmt 0 discriminator 1
 838 0488 314B     	 ldr r3,.L70+40
 839 048a 1B68     	 ldr r3,[r3]
 840 048c 181C     	 add r0,r3,#0
 841 048e 2649     	 ldr r1,.L70
 842 0490 FFF7FEFF 	 bl __aeabi_fcmplt
 843 0494 031E     	 sub r3,r0,#0
 844 0496 1AD0     	 beq .L37
 186:../main.c     **** 	        	   sector=2;
 845              	 .loc 1 186 0 is_stmt 1
 846 0498 244B     	 ldr r3,.L70+4
 847 049a 0222     	 mov r2,#2
 848 049c 1A60     	 str r2,[r3]
 187:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_HU);
 849              	 .loc 1 187 0
 850 049e 284B     	 ldr r3,.L70+24
 851 04a0 181C     	 mov r0,r3
 852 04a2 FFF7FEFF 	 bl PWM_CCU4_Stop
 188:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LV);
 853              	 .loc 1 188 0
 854 04a6 244B     	 ldr r3,.L70+16
 855 04a8 181C     	 mov r0,r3
 856 04aa FFF7FEFF 	 bl PWM_CCU8_Stop
 189:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HW);
 857              	 .loc 1 189 0
 858 04ae 234B     	 ldr r3,.L70+20
 859 04b0 181C     	 mov r0,r3
 860 04b2 FFF7FEFF 	 bl PWM_CCU8_Stop
 190:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LW);
 861              	 .loc 1 190 0
 862 04b6 234B     	 ldr r3,.L70+28
 863 04b8 181C     	 mov r0,r3
 864 04ba FFF7FEFF 	 bl PWM_CCU8_Stop
 191:../main.c     **** 	    		   PWM_CCU4_Start(&PWM_LU);
 865              	 .loc 1 191 0
 866 04be 1C4B     	 ldr r3,.L70+8
 867 04c0 181C     	 mov r0,r3
 868 04c2 FFF7FEFF 	 bl PWM_CCU4_Start
 192:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_HV);
 869              	 .loc 1 192 0
 870 04c6 1B4B     	 ldr r3,.L70+12
 871 04c8 181C     	 mov r0,r3
 872 04ca FFF7FEFF 	 bl PWM_CCU8_Start
 873              	.L37:
 193:../main.c     **** 	           }
 194:../main.c     **** 	           if ((volt_w>12) && (volt_w<23.5)){
 874              	 .loc 1 194 0
 875 04ce 204B     	 ldr r3,.L70+40
 876 04d0 1B68     	 ldr r3,[r3]
 877 04d2 181C     	 add r0,r3,#0
 878 04d4 1449     	 ldr r1,.L70
 879 04d6 FFF7FEFF 	 bl __aeabi_fcmpgt
 880 04da 031E     	 sub r3,r0,#0
 881 04dc 22D0     	 beq .L4
 882              	 .loc 1 194 0 is_stmt 0 discriminator 1
 883 04de 1C4B     	 ldr r3,.L70+40
 884 04e0 1B68     	 ldr r3,[r3]
 885 04e2 181C     	 add r0,r3,#0
 886 04e4 1949     	 ldr r1,.L70+36
 887 04e6 FFF7FEFF 	 bl __aeabi_fcmplt
 888 04ea 031E     	 sub r3,r0,#0
 889 04ec 1AD0     	 beq .L4
 195:../main.c     **** 	        	   sector=5;
 890              	 .loc 1 195 0 is_stmt 1
 891 04ee 0F4B     	 ldr r3,.L70+4
 892 04f0 0522     	 mov r2,#5
 893 04f2 1A60     	 str r2,[r3]
 196:../main.c     **** 	    		   PWM_CCU4_Stop(&PWM_HU);
 894              	 .loc 1 196 0
 895 04f4 124B     	 ldr r3,.L70+24
 896 04f6 181C     	 mov r0,r3
 897 04f8 FFF7FEFF 	 bl PWM_CCU4_Stop
 197:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LV);
 898              	 .loc 1 197 0
 899 04fc 0E4B     	 ldr r3,.L70+16
 900 04fe 181C     	 mov r0,r3
 901 0500 FFF7FEFF 	 bl PWM_CCU8_Stop
 198:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_HW);
 902              	 .loc 1 198 0
 903 0504 0D4B     	 ldr r3,.L70+20
 904 0506 181C     	 mov r0,r3
 905 0508 FFF7FEFF 	 bl PWM_CCU8_Stop
 199:../main.c     **** 	    		   PWM_CCU8_Stop(&PWM_LW);
 906              	 .loc 1 199 0
 907 050c 0D4B     	 ldr r3,.L70+28
 908 050e 181C     	 mov r0,r3
 909 0510 FFF7FEFF 	 bl PWM_CCU8_Stop
 200:../main.c     **** 	    		   PWM_CCU4_Start(&PWM_LU);
 910              	 .loc 1 200 0
 911 0514 064B     	 ldr r3,.L70+8
 912 0516 181C     	 mov r0,r3
 913 0518 FFF7FEFF 	 bl PWM_CCU4_Start
 201:../main.c     **** 	    		   PWM_CCU8_Start(&PWM_HV);
 914              	 .loc 1 201 0
 915 051c 054B     	 ldr r3,.L70+12
 916 051e 181C     	 mov r0,r3
 917 0520 FFF7FEFF 	 bl PWM_CCU8_Start
 918              	.L4:
 202:../main.c     **** 	        	   }
 203:../main.c     **** 
 204:../main.c     **** }
 919              	 .loc 1 204 0
 920 0524 BD46     	 mov sp,r7
 921              	 
 922 0526 80BD     	 pop {r7,pc}
 923              	.L71:
 924              	 .align 2
 925              	.L70:
 926 0528 00004041 	 .word 1094713344
 927 052c 00000000 	 .word sector
 928 0530 00000000 	 .word PWM_LU
 929 0534 00000000 	 .word PWM_HV
 930 0538 00000000 	 .word PWM_LV
 931 053c 00000000 	 .word PWM_HW
 932 0540 00000000 	 .word PWM_HU
 933 0544 00000000 	 .word PWM_LW
 934 0548 00000000 	 .word volt_v
 935 054c 0000BC41 	 .word 1102839808
 936 0550 00000000 	 .word volt_w
 937              	 .cfi_endproc
 938              	.LFE314:
 940              	 .global __aeabi_i2d
 941              	 .global __aeabi_dmul
 942              	 .global __aeabi_ddiv
 943              	 .global __aeabi_d2f
 944              	 .section .text.Adc_Measurement_Handler,"ax",%progbits
 945              	 .align 2
 946              	 .global Adc_Measurement_Handler
 947              	 .code 16
 948              	 .thumb_func
 950              	Adc_Measurement_Handler:
 951              	.LFB315:
 205:../main.c     **** void Adc_Measurement_Handler(){
 952              	 .loc 1 205 0
 953              	 .cfi_startproc
 954 0000 98B5     	 push {r3,r4,r7,lr}
 955              	.LCFI5:
 956              	 .cfi_def_cfa_offset 16
 957              	 .cfi_offset 3,-16
 958              	 .cfi_offset 4,-12
 959              	 .cfi_offset 7,-8
 960              	 .cfi_offset 14,-4
 961 0002 00AF     	 add r7,sp,#0
 962              	.LCFI6:
 963              	 .cfi_def_cfa_register 7
 206:../main.c     **** 	volt_phaseU=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Voltage_PhaseU);
 964              	 .loc 1 206 0
 965 0004 3F4B     	 ldr r3,.L73
 966 0006 181C     	 mov r0,r3
 967 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 968 000c 031C     	 mov r3,r0
 969 000e 1A1C     	 mov r2,r3
 970 0010 3D4B     	 ldr r3,.L73+4
 971 0012 1A80     	 strh r2,[r3]
 207:../main.c     **** 	volt_phaseV=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Voltage_PhaseV);
 972              	 .loc 1 207 0
 973 0014 3D4B     	 ldr r3,.L73+8
 974 0016 181C     	 mov r0,r3
 975 0018 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 976 001c 031C     	 mov r3,r0
 977 001e 1A1C     	 mov r2,r3
 978 0020 3B4B     	 ldr r3,.L73+12
 979 0022 1A80     	 strh r2,[r3]
 208:../main.c     **** 	volt_phaseW=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Voltage_PhaseW);
 980              	 .loc 1 208 0
 981 0024 3B4B     	 ldr r3,.L73+16
 982 0026 181C     	 mov r0,r3
 983 0028 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 984 002c 031C     	 mov r3,r0
 985 002e 1A1C     	 mov r2,r3
 986 0030 394B     	 ldr r3,.L73+20
 987 0032 1A80     	 strh r2,[r3]
 209:../main.c     ****     volt_u=(volt_phaseU*5*12.2)/(2.2*4096);
 988              	 .loc 1 209 0
 989 0034 344B     	 ldr r3,.L73+4
 990 0036 1B88     	 ldrh r3,[r3]
 991 0038 1A1C     	 mov r2,r3
 992 003a 131C     	 mov r3,r2
 993 003c 9B00     	 lsl r3,r3,#2
 994 003e 9B18     	 add r3,r3,r2
 995 0040 181C     	 mov r0,r3
 996 0042 FFF7FEFF 	 bl __aeabi_i2d
 997 0046 031C     	 mov r3,r0
 998 0048 0C1C     	 mov r4,r1
 999 004a 181C     	 mov r0,r3
 1000 004c 211C     	 mov r1,r4
 1001 004e 334A     	 ldr r2,.L73+24
 1002 0050 334B     	 ldr r3,.L73+28
 1003 0052 FFF7FEFF 	 bl __aeabi_dmul
 1004 0056 031C     	 mov r3,r0
 1005 0058 0C1C     	 mov r4,r1
 1006 005a 181C     	 mov r0,r3
 1007 005c 211C     	 mov r1,r4
 1008 005e 314A     	 ldr r2,.L73+32
 1009 0060 314B     	 ldr r3,.L73+36
 1010 0062 FFF7FEFF 	 bl __aeabi_ddiv
 1011 0066 031C     	 mov r3,r0
 1012 0068 0C1C     	 mov r4,r1
 1013 006a 181C     	 mov r0,r3
 1014 006c 211C     	 mov r1,r4
 1015 006e FFF7FEFF 	 bl __aeabi_d2f
 1016 0072 021C     	 add r2,r0,#0
 1017 0074 2D4B     	 ldr r3,.L73+40
 1018 0076 1A60     	 str r2,[r3]
 210:../main.c     ****     volt_v=(volt_phaseV*5*12.2)/(2.2*4096);
 1019              	 .loc 1 210 0
 1020 0078 254B     	 ldr r3,.L73+12
 1021 007a 1B88     	 ldrh r3,[r3]
 1022 007c 1A1C     	 mov r2,r3
 1023 007e 131C     	 mov r3,r2
 1024 0080 9B00     	 lsl r3,r3,#2
 1025 0082 9B18     	 add r3,r3,r2
 1026 0084 181C     	 mov r0,r3
 1027 0086 FFF7FEFF 	 bl __aeabi_i2d
 1028 008a 031C     	 mov r3,r0
 1029 008c 0C1C     	 mov r4,r1
 1030 008e 181C     	 mov r0,r3
 1031 0090 211C     	 mov r1,r4
 1032 0092 224A     	 ldr r2,.L73+24
 1033 0094 224B     	 ldr r3,.L73+28
 1034 0096 FFF7FEFF 	 bl __aeabi_dmul
 1035 009a 031C     	 mov r3,r0
 1036 009c 0C1C     	 mov r4,r1
 1037 009e 181C     	 mov r0,r3
 1038 00a0 211C     	 mov r1,r4
 1039 00a2 204A     	 ldr r2,.L73+32
 1040 00a4 204B     	 ldr r3,.L73+36
 1041 00a6 FFF7FEFF 	 bl __aeabi_ddiv
 1042 00aa 031C     	 mov r3,r0
 1043 00ac 0C1C     	 mov r4,r1
 1044 00ae 181C     	 mov r0,r3
 1045 00b0 211C     	 mov r1,r4
 1046 00b2 FFF7FEFF 	 bl __aeabi_d2f
 1047 00b6 021C     	 add r2,r0,#0
 1048 00b8 1D4B     	 ldr r3,.L73+44
 1049 00ba 1A60     	 str r2,[r3]
 211:../main.c     ****     volt_w=(volt_phaseW*5*12.2)/(2.2*4096);
 1050              	 .loc 1 211 0
 1051 00bc 164B     	 ldr r3,.L73+20
 1052 00be 1B88     	 ldrh r3,[r3]
 1053 00c0 1A1C     	 mov r2,r3
 1054 00c2 131C     	 mov r3,r2
 1055 00c4 9B00     	 lsl r3,r3,#2
 1056 00c6 9B18     	 add r3,r3,r2
 1057 00c8 181C     	 mov r0,r3
 1058 00ca FFF7FEFF 	 bl __aeabi_i2d
 1059 00ce 031C     	 mov r3,r0
 1060 00d0 0C1C     	 mov r4,r1
 1061 00d2 181C     	 mov r0,r3
 1062 00d4 211C     	 mov r1,r4
 1063 00d6 114A     	 ldr r2,.L73+24
 1064 00d8 114B     	 ldr r3,.L73+28
 1065 00da FFF7FEFF 	 bl __aeabi_dmul
 1066 00de 031C     	 mov r3,r0
 1067 00e0 0C1C     	 mov r4,r1
 1068 00e2 181C     	 mov r0,r3
 1069 00e4 211C     	 mov r1,r4
 1070 00e6 0F4A     	 ldr r2,.L73+32
 1071 00e8 0F4B     	 ldr r3,.L73+36
 1072 00ea FFF7FEFF 	 bl __aeabi_ddiv
 1073 00ee 031C     	 mov r3,r0
 1074 00f0 0C1C     	 mov r4,r1
 1075 00f2 181C     	 mov r0,r3
 1076 00f4 211C     	 mov r1,r4
 1077 00f6 FFF7FEFF 	 bl __aeabi_d2f
 1078 00fa 021C     	 add r2,r0,#0
 1079 00fc 0D4B     	 ldr r3,.L73+48
 1080 00fe 1A60     	 str r2,[r3]
 212:../main.c     **** }
 1081              	 .loc 1 212 0
 1082 0100 BD46     	 mov sp,r7
 1083              	 
 1084 0102 98BD     	 pop {r3,r4,r7,pc}
 1085              	.L74:
 1086              	 .align 2
 1087              	.L73:
 1088 0104 00000000 	 .word ADC_MEASUREMENT_Voltage_PhaseU_handle
 1089 0108 00000000 	 .word volt_phaseU
 1090 010c 00000000 	 .word ADC_MEASUREMENT_Voltage_PhaseV_handle
 1091 0110 00000000 	 .word volt_phaseV
 1092 0114 00000000 	 .word ADC_MEASUREMENT_Voltage_PhaseW_handle
 1093 0118 00000000 	 .word volt_phaseW
 1094 011c 66666666 	 .word 1717986918
 1095 0120 66662840 	 .word 1076389478
 1096 0124 9A999999 	 .word -1717986918
 1097 0128 9999C140 	 .word 1086429593
 1098 012c 00000000 	 .word volt_u
 1099 0130 00000000 	 .word volt_v
 1100 0134 00000000 	 .word volt_w
 1101              	 .cfi_endproc
 1102              	.LFE315:
 1104              	 .text
 1105              	.Letext0:
 1106              	 .file 2 "d:\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1107              	 .file 3 "d:\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1108              	 .file 4 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1109              	 .file 5 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/XMCLib/inc/xmc1_scu.h"
 1110              	 .file 6 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/XMCLib/inc/xmc_vadc.h"
 1111              	 .file 7 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
 1112              	 .file 8 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/XMCLib/inc/xmc_ccu4.h"
 1113              	 .file 9 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 1114              	 .file 10 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/XMCLib/inc/xmc_gpio.h"
 1115              	 .file 11 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/XMCLib/inc/xmc1_gpio.h"
 1116              	 .file 12 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/XMCLib/inc/xmc_ccu8.h"
 1117              	 .file 13 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 1118              	 .file 14 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 1119              	 .file 15 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/PWM_CCU4/pwm_ccu4.h"
 1120              	 .file 16 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/DAVE.h"
 1121              	 .file 17 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/CMSIS/Include/cmsis_gcc.h"
 1122              	 .file 18 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 1123              	 .file 19 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/ADC_MEASUREMENT/adc_measurement_extern.h"
 1124              	 .file 20 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/PWM_CCU8/pwm_ccu8_extern.h"
 1125              	 .file 21 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotor/Dave/Generated/PWM_CCU4/pwm_ccu4_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000002 volt_phaseU
                            *COM*:00000002 volt_phaseV
                            *COM*:00000002 volt_phaseW
                            *COM*:00000002 current_phaseU
                            *COM*:00000002 current_phase_V
                            *COM*:00000004 hallposition
    {standard input}:28     .bss.flag:00000000 flag
    {standard input}:25     .bss.flag:00000000 $d
    {standard input}:35     .bss.flag1:00000000 flag1
    {standard input}:32     .bss.flag1:00000000 $d
    {standard input}:42     .bss.flag2:00000000 flag2
    {standard input}:39     .bss.flag2:00000000 $d
    {standard input}:49     .bss.flag3:00000000 flag3
    {standard input}:46     .bss.flag3:00000000 $d
                            *COM*:00000004 time1
                            *COM*:00000004 time2
                            *COM*:00000004 time_1phase_updown_zerocross
                            *COM*:00000004 time_30degree
                            *COM*:00000004 poles_pair
    {standard input}:61     .data.Kp:00000000 Kp
    {standard input}:58     .data.Kp:00000000 $d
    {standard input}:68     .data.Ki:00000000 Ki
    {standard input}:65     .data.Ki:00000000 $d
                            *COM*:00000004 duty1
                            *COM*:00000004 duty2
                            *COM*:00000004 sum
                            *COM*:00000004 volt_u
                            *COM*:00000004 volt_v
                            *COM*:00000004 volt_w
    {standard input}:81     .bss.SpeedMea1:00000000 SpeedMea1
    {standard input}:78     .bss.SpeedMea1:00000000 $d
                            *COM*:00000004 time_30degree1
                            *COM*:00000004 SpeedMea2
                            *COM*:00000004 theta
    {standard input}:91     .bss.theta1:00000000 theta1
    {standard input}:88     .bss.theta1:00000000 $d
                            *COM*:00000004 SpeedError
                            *COM*:00000004 realtheta
    {standard input}:100    .bss.a:00000000 a
    {standard input}:97     .bss.a:00000000 $d
                            *COM*:00000004 current_alpha
                            *COM*:00000004 current_beta
                            *COM*:00000004 current_u
                            *COM*:00000004 current_v
                            *COM*:00000004 current_sd
                            *COM*:00000004 current_sq
                            *COM*:00000004 sum_IsqRef
                            *COM*:00000004 Kp_IsqRef
                            *COM*:00000004 Ki_IsqRef
                            *COM*:00000004 IsqRef
                            *COM*:00000004 IsqRef1
                            *COM*:00000004 sum_Usd
                            *COM*:00000004 Kp_Usd
                            *COM*:00000004 Ki_Usd
                            *COM*:00000004 IsdError
                            *COM*:00000004 Usd
                            *COM*:00000004 Usd1
                            *COM*:00000004 sum_Usq
                            *COM*:00000004 Kp_Usq
                            *COM*:00000004 Ki_Usq
                            *COM*:00000004 IsqError
                            *COM*:00000004 Usq
                            *COM*:00000004 Usq1
                            *COM*:00000004 Usalpha
                            *COM*:00000004 Usbeta
                            *COM*:00000004 SpeedMea
    {standard input}:133    .data.SpeedRef:00000000 SpeedRef
    {standard input}:130    .data.SpeedRef:00000000 $d
                            *COM*:00000004 sector
                            *COM*:00000004 ct
                            *COM*:00000004 Error
    {standard input}:143    .data.duty:00000000 duty
    {standard input}:140    .data.duty:00000000 $d
                            *COM*:00000004 dutytest
    {standard input}:151    .bss.timetick_count:00000000 timetick_count
    {standard input}:148    .bss.timetick_count:00000000 $d
    {standard input}:158    .bss.timetick_count1:00000000 timetick_count1
    {standard input}:155    .bss.timetick_count1:00000000 $d
    {standard input}:165    .bss.timetick_count2:00000000 timetick_count2
    {standard input}:162    .bss.timetick_count2:00000000 $d
    {standard input}:172    .bss.timetick_count3:00000000 timetick_count3
    {standard input}:169    .bss.timetick_count3:00000000 $d
    {standard input}:179    .bss.time:00000000 time
    {standard input}:176    .bss.time:00000000 $d
                            *COM*:00000004 TimerId
    {standard input}:183    .text.main:00000000 $t
    {standard input}:188    .text.main:00000000 main
    {standard input}:227    .text.IRQ21_Handler:00000000 $t
    {standard input}:232    .text.IRQ21_Handler:00000000 IRQ21_Handler
    {standard input}:728    .text.IRQ21_Handler:0000038c $d
    {standard input}:750    .text.IRQ21_Handler:000003e0 $t
    {standard input}:926    .text.IRQ21_Handler:00000528 $d
    {standard input}:945    .text.Adc_Measurement_Handler:00000000 $t
    {standard input}:950    .text.Adc_Measurement_Handler:00000000 Adc_Measurement_Handler
    {standard input}:1088   .text.Adc_Measurement_Handler:00000104 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
__aeabi_fcmpgt
__aeabi_fcmplt
PWM_CCU4_Stop
PWM_CCU8_Stop
PWM_CCU8_Start
PWM_CCU4_Start
PWM_HU
PWM_LU
PWM_LV
PWM_HW
PWM_HV
PWM_LW
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
ADC_MEASUREMENT_GetResult
ADC_MEASUREMENT_Voltage_PhaseU_handle
ADC_MEASUREMENT_Voltage_PhaseV_handle
ADC_MEASUREMENT_Voltage_PhaseW_handle
